buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '[6.0,6.2)', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
    maven { url = 'https://maven.minecraftforge.net/' }
    maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.2.5'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

version = '2.0.0'
group = 'net.nikgub.pyromancer'
archivesBaseName = 'pyromancer'
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.20.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=pyromancer.mixins.json"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                pyromancer {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=pyromancer.mixins.json"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                pyromancer {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'pyromancer'
            arg "-mixin.config=pyromancer.mixins.json"
            mods {
                pyromancer {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'pyromancer', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            arg "-mixin.config=pyromancer.mixins.json"
            mods {
                pyromancer {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources {
    srcDir 'src/generated/resources'
    ext.refMap = "main.refmap.json"
}

repositories {
    maven { url 'https://maven.blamejared.com' }
    maven { url = 'https://maven.minecraftforge.net/' }
    maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}
dependencies {
    if(project.hasProperty('patchouliVersion')) implementation fg.deobf("vazkii.patchouli:Patchouli:${patchouliVersion}")

    // TODO: I shall remember thee, Tarnished
    // implementation fg.deobf("curse.maven:void_tome-940466:4895219")
}

mixin {
    //add sourceSets.main, "pyromancer.refmap.json"
    config "pyromancer.mixins.json"

    debug.export = true
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "pyromancer",
                "Specification-Vendor"    : "nikgub",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "nikgub",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "pyromancer.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId="xyz.nikgub.pyromancer"
            artifactId="pyromancer"

            artifact jar
        }
    }
    repositories {
        maven {
            name = "GitHub___neoPyromancer___Package"
            url = "https://maven.pkg.github.com/gubnik/___neo___pyromancer"
            credentials {
                username = System.getenv("GITHUB_LOGIN")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}